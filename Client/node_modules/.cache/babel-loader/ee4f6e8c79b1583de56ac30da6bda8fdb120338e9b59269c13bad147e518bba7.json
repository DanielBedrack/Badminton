{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\Badminton\\\\Badminton\\\\Client\\\\src\\\\Components\\\\Uploads\\\\VideoFile\\\\VideoUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./videoUploader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = _ref => {\n  let {\n    progress\n  } = _ref;\n  const barStyle = {\n    width: `${progress}%`,\n    backgroundColor: \"#0074D9\",\n    height: \"20px\",\n    borderRadius: \"10px\",\n    transition: \"width 0.3s ease-in-out\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: barStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"5px\"\n      },\n      children: [progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nconst VideoUploader = () => {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  function handleFileChange(event) {\n    const file = event.target.files[0];\n    const allowedTypes = [\"video/mp4\", \"video/webm\", \"video/ogg\", \"video/mkv\"]; // Allowed video types\n    if (allowedTypes.includes(file.type)) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const dataUrl = reader.result;\n        setSelectedVideo(dataUrl);\n        localStorage.setItem(\"videoUrl\", dataUrl);\n\n        // Upload the video\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"/analysis\", true);\n        xhr.upload.addEventListener(\"progress\", event => {\n          if (event.lengthComputable) {\n            const progress = Math.round(event.loaded / event.total * 100);\n            setUploadProgress(progress);\n          }\n        });\n        xhr.upload.addEventListener(\"load\", () => {\n          console.log(\"Upload complete!\");\n        });\n        xhr.upload.addEventListener(\"error\", event => {\n          console.error(`Upload failed: ${event}`);\n        });\n        xhr.send(file);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      alert(\"Please upload a video file (MP4, WebM, or Ogg).\");\n    }\n  }\n  useEffect(() => {\n    setSelectedVideo(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag And Drop Your Game Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedVideo == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: uploadProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-video\",\n      children: selectedVideo && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: selectedVideo,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoUploader, \"dBKqo8/t9TSPMX8hzKk9GYN2TgU=\");\n_c2 = VideoUploader;\nexport default VideoUploader;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"VideoUploader\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProgressBar","_ref","progress","barStyle","width","backgroundColor","height","borderRadius","transition","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","VideoUploader","_s","selectedVideo","setSelectedVideo","uploadProgress","setUploadProgress","handleFileChange","event","file","target","files","allowedTypes","includes","type","reader","FileReader","onload","dataUrl","result","localStorage","setItem","xhr","XMLHttpRequest","open","upload","addEventListener","lengthComputable","Math","round","loaded","total","console","log","error","send","readAsDataURL","alert","className","onChange","src","controls","_c2","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/Badminton/Badminton/Client/src/Components/Uploads/VideoFile/VideoUploader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./videoUploader.css\";\r\n\r\n\r\nconst ProgressBar = ({ progress }) => {\r\n  const barStyle = {\r\n    width: `${progress}%`,\r\n    backgroundColor: \"#0074D9\",\r\n    height: \"20px\",\r\n    borderRadius: \"10px\",\r\n    transition: \"width 0.3s ease-in-out\",\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"10px\" }}>\r\n      <div style={barStyle}></div>\r\n      <div style={{ marginTop: \"5px\" }}>{progress}%</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VideoUploader = () => {\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  function handleFileChange(event) {\r\n    const file = event.target.files[0];\r\n    const allowedTypes = [\"video/mp4\", \"video/webm\", \"video/ogg\", \"video/mkv\"]; // Allowed video types\r\n    if (allowedTypes.includes(file.type)) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const dataUrl = reader.result;\r\n        setSelectedVideo(dataUrl);\r\n        localStorage.setItem(\"videoUrl\", dataUrl);\r\n\r\n        // Upload the video\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", \"/analysis\", true);\r\n        xhr.upload.addEventListener(\"progress\", (event) => {\r\n          if (event.lengthComputable) {\r\n            const progress = Math.round((event.loaded / event.total) * 100);\r\n            setUploadProgress(progress);\r\n          }\r\n        });\r\n        xhr.upload.addEventListener(\"load\", () => {\r\n          console.log(\"Upload complete!\");\r\n        });\r\n        xhr.upload.addEventListener(\"error\", (event) => {\r\n          console.error(`Upload failed: ${event}`);\r\n        });\r\n        xhr.send(file);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      alert(\"Please upload a video file (MP4, WebM, or Ogg).\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSelectedVideo(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"video-container\">\r\n      <p>Drag And Drop Your Game Video</p>\r\n      <div className=\"upload-icon\">\r\n        {/* <FontAwesomeIcon icon={faEnvelope} /> */}\r\n      </div>\r\n      {selectedVideo == null ? (\r\n        <div>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          {uploadProgress > 0 && <ProgressBar progress={uploadProgress} />}\r\n        </div>\r\n      ) : (\r\n        <div className=\"uploaded-video\">\r\n          {selectedVideo && <video src={selectedVideo} controls />}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoUploader;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7B,MAAMC,WAAW,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAC/B,MAAME,QAAQ,GAAG;IACfC,KAAK,EAAG,GAAEF,QAAS,GAAE;IACrBG,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,MAAM;IACpBC,UAAU,EAAE;EACd,CAAC;EAED,oBACET,OAAA;IAAKU,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChCZ,OAAA;MAAKU,KAAK,EAAEN;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC5BhB,OAAA;MAAKU,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAE;MAAAC,QAAA,GAAET,QAAQ,EAAC,GAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;AAEV,CAAC;AAACC,EAAA,GAfIhB,WAAW;AAiBjB,MAAMiB,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAEvD,SAAS0B,gBAAgBA,CAACC,KAAK,EAAE;IAC/B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,YAAY,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;IAC5E,IAAIA,YAAY,CAACC,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAE;MACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpB,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAM;QAC7Bf,gBAAgB,CAACc,OAAO,CAAC;QACzBE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,OAAO,CAAC;;QAEzC;QACA,MAAMI,GAAG,GAAG,IAAIC,cAAc,EAAE;QAChCD,GAAG,CAACE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC;QACnCF,GAAG,CAACG,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAGlB,KAAK,IAAK;UACjD,IAAIA,KAAK,CAACmB,gBAAgB,EAAE;YAC1B,MAAMzC,QAAQ,GAAG0C,IAAI,CAACC,KAAK,CAAErB,KAAK,CAACsB,MAAM,GAAGtB,KAAK,CAACuB,KAAK,GAAI,GAAG,CAAC;YAC/DzB,iBAAiB,CAACpB,QAAQ,CAAC;UAC7B;QACF,CAAC,CAAC;QACFoC,GAAG,CAACG,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;UACxCM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QACjC,CAAC,CAAC;QACFX,GAAG,CAACG,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAGlB,KAAK,IAAK;UAC9CwB,OAAO,CAACE,KAAK,CAAE,kBAAiB1B,KAAM,EAAC,CAAC;QAC1C,CAAC,CAAC;QACFc,GAAG,CAACa,IAAI,CAAC1B,IAAI,CAAC;MAChB,CAAC;MACDM,MAAM,CAACqB,aAAa,CAAC3B,IAAI,CAAC;IAC5B,CAAC,MAAM;MACL4B,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF;EAEAzD,SAAS,CAAC,MAAM;IACdwB,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAKuD,SAAS,EAAC,iBAAiB;IAAA3C,QAAA,gBAC9BZ,OAAA;MAAAY,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACpChB,OAAA;MAAKuD,SAAS,EAAC;IAAa;MAAA1C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtB,EACLI,aAAa,IAAI,IAAI,gBACpBpB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACyB,QAAQ,EAAEhC;MAAiB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAChDM,cAAc,GAAG,CAAC,iBAAItB,OAAA,CAACC,WAAW;QAACE,QAAQ,EAAEmB;MAAe;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D,gBAENhB,OAAA;MAAKuD,SAAS,EAAC,gBAAgB;MAAA3C,QAAA,EAC5BQ,aAAa,iBAAIpB,OAAA;QAAOyD,GAAG,EAAErC,aAAc;QAACsC,QAAQ;MAAA;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACG,EAAA,CA3DID,aAAa;AAAAyC,GAAA,GAAbzC,aAAa;AA6DnB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAA0C,GAAA;AAAAC,YAAA,CAAA3C,EAAA;AAAA2C,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}